name: Run Kube-Burner Scenario

on:
  workflow_dispatch:
    inputs:
      KB_SCENARIO:
        description: "Kube-Burner scenario to run"
        required: false
        default: netpolchurn
        type: choice
        options:
          - netpolchurn
          - apiintensive
      CLUSTER_PROVIDER:
        description: "Cluster provider to use"
        required: false
        default: kindwithcilium
        type: choice
        options:
          - kindwithcilium
          - aksexistingcluster

jobs:
  run-kube-burner:
    name: "Run kube-burner - scenario: \"${{ github.event.inputs.KB_SCENARIO || 'no_kb_scenario_set' }}\" on cluster provider: \"${{ github.event.inputs.CLUSTER_PROVIDER || 'no_cluster_provider_set' }}\""
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run kube-burner tests
        env:
          KB_SCENARIO: ${{ github.event.inputs.KB_SCENARIO || 'netpolchurn' }}
          CLUSTER_PROVIDER: ${{ github.event.inputs.CLUSTER_PROVIDER || 'kindwithcilium' }}
        run: |
          go test -v -run TestRunKubeBurnerScenarios .

      - name: Collect executor output artifacts
        if: always()
        run: |
          find scenarios -type d -name output | while read dir; do
            executor=$(basename $(dirname "$dir"))
            mkdir -p "artifacts/$executor"
            zip -j "artifacts/$executor/output.zip" "$dir"/* || true
          done

      - name: Upload executor output artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: kube-burner-artifacts
          path: artifacts/
